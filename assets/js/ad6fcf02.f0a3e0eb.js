"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[8761],{70224:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return f}});var r=t(22374);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=r.createContext({}),p=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},s=function(n){var e=p(n.components);return r.createElement(c.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,c=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),m=p(t),f=i,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return t?r.createElement(d,a(a({ref:e},s),{},{components:t})):r.createElement(d,a({ref:e},s))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},32436:function(n,e,t){t.r(e),t.d(e,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=t(23405),i=t(54751),o=(t(22374),t(70224)),a=["components"],l={title:"01 IMAP\u7684TLS\u6293\u5305",tags:["IMAP"],date:"2022-08-02 07:09"},c=void 0,p={unversionedId:"Email/IMAP\u7684TLS\u6293\u5305",id:"Email/IMAP\u7684TLS\u6293\u5305",title:"01 IMAP\u7684TLS\u6293\u5305",description:"1 \u8bf4\u660e",source:"@site/docs/29.Email/01.IMAP\u7684TLS\u6293\u5305.md",sourceDirName:"29.Email",slug:"/Email/IMAP\u7684TLS\u6293\u5305",permalink:"/docs/Email/IMAP\u7684TLS\u6293\u5305",draft:!1,editUrl:"https://github.com/wuchuheng/wuchuheng.github.io/edit/master/docs/29.Email/01.IMAP\u7684TLS\u6293\u5305.md",tags:[{label:"IMAP",permalink:"/docs/tags/imap"}],version:"current",sidebarPosition:1,frontMatter:{title:"01 IMAP\u7684TLS\u6293\u5305",tags:["IMAP"],date:"2022-08-02 07:09"},sidebar:"tutorialSidebar",previous:{title:"01.Table\u8f6c\u6362\u4e3aJSON\u7684\u7b97\u6cd5\u5b9e\u73b0",permalink:"/docs/Lua/Table\u8f6c\u6362\u4e3aJSON\u7684\u7b97\u6cd5\u5b9e\u73b0"},next:{title:"02 IMAP\u7684\u8fde\u63a5\u4e0e\u8c03\u8bd5",permalink:"/docs/Email/IMAP\u7684\u8fde\u63a5\u4e0e\u8c03\u8bd5"}},s={},u=[{value:"1 \u8bf4\u660e",id:"1-\u8bf4\u660e",level:2},{value:"2 \u4ee3\u7406\u5c42\u7684\u8f6c\u53d1\u4ee3\u7801\u5b9e\u73b0",id:"2-\u4ee3\u7406\u5c42\u7684\u8f6c\u53d1\u4ee3\u7801\u5b9e\u73b0",level:3}],m={toc:u};function f(n){var e=n.components,t=(0,i.Z)(n,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"1-\u8bf4\u660e"},"1 \u8bf4\u660e"),(0,o.kt)("p",null,"\u53ea\u8981\u662f\u957f\u8fde\u63a5\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"tcp/ip"),"\u8fde\u63a5\u57fa\u4e8e",(0,o.kt)("inlineCode",{parentName:"p"},"TLS"),"\u52a0\u5bc6\uff0c\u60f3\u8981\u89e3\u5bc6\uff0c\u9664\u975e\u6709\u670d\u52a1\u7aef\u7684\u79c1\u94a5\u548c\u8bc1\u4e66\uff0c\u6216\u662f\u5bf9\u5ba2\u6237\u7aef\u80fd\u76f4\u63a5\n\u4fb5\u5165\u5f0f\u690d\u5165\u4ee3\u7801\u8c03\u8bd5\uff0c\u4e0d\u7136\uff0c\u5f88\u96be\u7684\u4e86\u3002 \u4f46\u4e5f\u6709\u53ef\u80fd\u4e2d\u95f4\u4eba\u8fdb\u884c\u4ecb\u5165\u3002 \u6bd4\u5982\uff0c\u672c\u5730\u7684\u90ae\u4ef6\u670d\u52a1\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"imsp"),"\u7684\u6570\u636e\n\u8d70\u7684\u662f",(0,o.kt)("inlineCode",{parentName:"p"},"TLS"),"\u5c42\u52a0\u5bc6\u7684\uff0c\u8fd9\u6837\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7684\u6570\u636e\u57fa\u672c\u5f88\u96be\u88ab\u6293\u5230\u3002\u4e0d\u8fc7\uff0c\u672c\u5730\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\u63d0\u4f9b\u4ee3\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u4ece\n\u4ee3\u7406\u5165\u624b\uff0c\u6765\u6355\u83b7\u52a0\u5bc6\u7684\u6570\u636e\u3002 "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="\u65b9\u5f0f\u5927\u6982\u5c31\u662f"',title:'"\u65b9\u5f0f\u5927\u6982\u5c31\u662f"'},"imsp\u5ba2\u6237\u7aef ---TLS---\x3e \u4ee3\u7406\u5c42 ----TLS---\x3e \u670d\u52a1\u7aef\n")),(0,o.kt)("p",null,"\u51c6\u5907\u5de5\u4f5c\u5c31\u662f\uff1a "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u51c6\u5907\u597d\u4e00\u4e2a\u57df\u540d\uff0c\u5e76\u51c6\u5907\u8fd9\u4e2a\u57df\u540d\u7684\u8bc1\u4e66\u7684\u79c1\u94a5\uff0c\u8981",(0,o.kt)("inlineCode",{parentName:"li"},"CI"),"\u8bc1\u4e66\u673a\u6784\u7684\u7b7e\u53d1\u7684\u90a3\u79cd\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7136\u540e\u518d\u628a\u57df\u540d\u89e3\u6790\u6765\u672c\u673a",(0,o.kt)("inlineCode",{parentName:"li"},"ip")," ",(0,o.kt)("inlineCode",{parentName:"li"},"127.0.0.1"),",\u8fd9\u4e2a\u4fee\u6539\u4e0b",(0,o.kt)("inlineCode",{parentName:"li"},"/etc/hosts"),"\u6587\u4ef6\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u6700\u540e\u628a\u90ae\u4ef6\u5ba2\u6237\u7aef\u7684\u7aef\u53e3\u914d\u7f6e\u4e3a\u81ea\u5df1\u6307\u5411\u672c\u5730\u7684\u57df\u540d\u3002 "),(0,o.kt)("li",{parentName:"ul"},"\u505a\u597d\u8fd9\u4e9b\uff0c\u5c31\u53ef\u4ee5\u5199\u4ee3\u7406\u4e86\u3002 ")),(0,o.kt)("h3",{id:"2-\u4ee3\u7406\u5c42\u7684\u8f6c\u53d1\u4ee3\u7801\u5b9e\u73b0"},"2 \u4ee3\u7406\u5c42\u7684\u8f6c\u53d1\u4ee3\u7801\u5b9e\u73b0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "bufio"\n    "crypto/rand"\n    "crypto/tls"\n    "log"\n    "net"\n    "time"\n)\n\nfunc main() {\n    cert, err := tls.LoadX509KeyPair(\n        "certs/client.pem",\n        "certs/private.key",\n    )\n    if err != nil {\n        log.Fatalf("server: loadkeys: %s", err)\n    }\n    config := tls.Config{Certificates: []tls.Certificate{cert}}\n    config.Rand = rand.Reader\n    service := "0.0.0.0:993"\n    listener, err := tls.Listen("tcp", service, &config)\n    if err != nil {\n        log.Fatalf("server: listen: %s", err)\n    }\n    for {\n        conn, err := listener.Accept()\n        if err != nil {\n            log.Println(err)\n            continue\n        }\n        go handleConn(conn)\n    }\n}\n\nfunc handleConn(conn net.Conn) {\n    defer conn.Close()\n\n    cert, err := tls.LoadX509KeyPair(\n        "certs/client.pem",\n        "certs/private.key",\n    )\n    if err != nil {\n        log.Fatalf("server: loadkeys: %s", err)\n    }\n    config := tls.Config{Certificates: []tls.Certificate{cert}, InsecureSkipVerify: true}\n    imspConn, err := tls.Dial("tcp", "imsp.qq.com:993", &config)\n    if err != nil {\n        log.Fatalf("client: dial: %s", err)\n    }\n    go handleImapConn(imspConn, conn)\n\n    r := bufio.NewReader(conn)\n    for {\n        msg, err := r.ReadString(\'\\n\')\n        if err != nil {\n            log.Println(err)\n            return\n        }\n        t := time.Now()\n        println("-> " + t.Format("2006-01-02 15:04:05") + " " + msg)\n        n, err := imspConn.Write([]byte(msg))\n        if err != nil {\n            log.Println(n, err)\n            return\n        }\n    }\n}\n\nfunc handleImapConn(imspConn net.Conn, parenConn net.Conn) {\n    r := bufio.NewReader(imspConn)\n    for {\n        msg, err := r.ReadString(\'\\n\')\n        if err != nil {\n            log.Println(err)\n            return\n        }\n        t := time.Now()\n        println("<- " + t.Format("2006-01-02 15:04:05") + " " + msg)\n\n        n, err := parenConn.Write([]byte(msg))\n        if err != nil {\n            log.Println(n, err)\n            return\n        }\n    }\n}\n')),(0,o.kt)("p",null,"\u4ee3\u7406\u7684\u601d\u8def\u5f88\u7b80\u5355\u7684\uff0c\u5c31\u662f\u4ee5",(0,o.kt)("inlineCode",{parentName:"p"},"TLS"),"\u65b9\u5f0f\u76d1\u542c\u672c\u5730\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"933"),"\u7aef\u53e3\uff0c\u7531\u4e8e\u672c\u5730\u7684\u90ae\u4ef6\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"imsp"),"\u7684\u4ee3\u7406\u5c31\u57df\u540d\u5c31\u662f\u6307\u5411\u672c\u5730\uff0c\n\u4e14\u672c\u5730\u7684\u8bc1\u4e66\u662f\u5408\u6cd5\u7684\uff0c\u81ea\u7136\u5c31\u80fd\u89e3\u5bc6\u53d1\u5411\u8fd9\u91cc\u7684\u6570\u636e\uff0c\u7136\u540e\u628a\u6570\u636e\u5bfc\u5411\u670d\u52a1\u7aef\uff0c\u8ba9\u672c\u5730\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\u6570\u636e\u56de\u5230\u8be5\u53bb\u7684\u5730\u65b9\n\uff0c\u540c\u7406\uff0c\u670d\u52a1\u7aef\u7684\u6570\u636e\u53d1\u5411\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e5f\u662f\u8981\u7ecf\u8fc7\u4ee3\u7406\u670d\u52a1\u7684\uff0c \u81ea\u7136\u4e5f\u80fd\u89e3\u5f00\u3002   "),(0,o.kt)("p",null,"\u81f3\u6b64\uff0c\u88ab\u52a0\u5bc6\u7684\u6570\u636e\u5df2\u7ecf\u5b8c\u6574\u88ab\u6253\u5370\u51fa\u6765\u4e86\u3002"))}f.isMDXComponent=!0}}]);