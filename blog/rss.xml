<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>wuchuheng's notes Blog</title>
        <link>https://wuchuheng.com/blog</link>
        <description>wuchuheng's notes Blog</description>
        <lastBuildDate>Fri, 28 Jul 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[去中心化的意义与我的答案]]></title>
            <link>https://wuchuheng.com/blog/群体论</link>
            <guid>群体论</guid>
            <pubDate>Fri, 28 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[哎呀!被你发现了。是的，这就是我基于“去中心化”的理解后，给出的一个的答案。]]></description>
            <content:encoded><![CDATA[<p>哎呀!被你发现了。是的，这就是我基于“去中心化”的理解后，给出的一个的答案。
在这之前，我先说下为什么要“去中心化”？ 我认为，在一个社会群体中，尽管“信息”在群体中
能进行分享和处理，但是，在这个群体中，人们的各自利益往往不一致，从而导致出于自身利益的考量从而会对
群体中的信息进行管控。举这个例子：比如工人生产了一批瓦罐，那么这对于急需这批瓦罐的消费者来说是很利好的消息。
但是，消息在群体中传递是需要中间人去执行的，而这批瓦罐的中间消息传递人往往是商人，但商人会出于自身利益的考量，
从而会刻意去控制消息的传递，比如延缓消息的传递，或只传递一部分，从而造成了生产者和消费者很被，而商家得利的局面。
我把这种基于无数中间人来传递消息，从而造成上下信息差的信息传递方式称为"消息的纵向传递“。<br>
<!-- --> 正时因为“消息的纵向传递”所产生的信息差能给当事人带来主动权基于“权利”，从而导致了人为的信息传递效率低下。
社会群体的生产效率低下的同时也肥了了中间人的腰包。基于此，可以用来解释，这也是阶级之所以能在群体中形成的核心原因。
而“去中心化”则是基于“信息的横向传递”来解决这个问题的。<br>
<!-- --> 还是上面那么例子, 如果瓦罐工人所生产的瓦罐不用经过中间商就能把消息广播到消费者那边，绕开中间商这一环节，
这种以自身为一端，把“信息”差别直接传递到最终的目的地的方式，我称为“信息的横向传递”，这种信息的传递方式相比于“纵向信息传递”
要更高效，更快捷，更公平。从整体上来说，利生产者也利消费者，且由于信息的传递效率的提高，从而也提高了整个群体整个社会的生产效率。 </p><p>这就是我理解的“去中心化”，而“自由传单”就是基于这一“横向信息传递”的原则来设计的。它没有平台，也没有中心点，但它仍然能实现信息的传递。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[群体论]]></title>
            <link>https://wuchuheng.com/blog/群体论</link>
            <guid>群体论</guid>
            <pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[&emsp;生存是第一需求，而生存的环境是未知的,在无法确定现在与未来能否生存的情况下，未知就是生存最大的威胁。]]></description>
            <content:encoded><![CDATA[<p>哎呀!被你发现了。是的，这就是我基于“去中心化”的理解后，给出的一个的答案。
在这之前，我先说下为什么要“去中心化”？ 我认为，在一个社会群体中，尽管“信息”在群体中
能进行分享和处理，但是，在这个群体中，人们的各自利益往往不一致，从而导致出于自身利益的考量从而会对
群体中的信息进行管控。举这个例子：比如工人生产了一批瓦罐，那么这对于急需这批瓦罐的消费者来说是很利好的消息。
但是，消息在群体中传递是需要中间人去执行的，而这批瓦罐的中间消息传递人往往是商人，但商人会出于自身利益的考量，
从而会刻意去控制消息的传递，比如延缓消息的传递，或只传递一部分，从而造成了生产者和消费者很被，而商家得利的局面。
我把这种基于无数中间人来传递消息，从而造成上下信息差的信息传递方式称为"消息的纵向传递“。<br>
<!-- --> 正时因为“消息的纵向传递”所产生的信息差能给当事人带来主动权基于“权利”，从而导致了人为的信息传递效率低下。
社会群体的生产效率低下的同时也肥了了中间人的腰包。基于此，可以用来解释，这也是阶级之所以能在群体中形成的核心原因。
而“去中心化”则是基于“信息的横向传递”来解决这个问题的。<br>
<!-- --> 还是上面那么例子, 如果瓦罐工人所生产的瓦罐不用经过中间商就能把消息广播到消费者那边，绕开中间商这一环节，
这种以自身为一端，把“信息”差别直接传递到最终的目的地的方式，我称为“信息的横向传递”，这种信息的传递方式相比于“纵向信息传递”
要更高效，更快捷，更公平。从整体上来说，利生产者也利消费者，且由于信息的传递效率的提高，从而也提高了整个群体整个社会的生产效率。 </p><p>这就是我理解的“去中心化”，而“自由传单”就是基于这一“横向信息传递”的原则来设计的。它没有平台，也没有中心点，但它仍然能实现信息的传递。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2023-01-31】毁灭与希望对人类发生的作用.md]]></title>
            <link>https://wuchuheng.com/blog/2023/01/31/毁灭与希望对人类发生的作用</link>
            <guid>/2023/01/31/毁灭与希望对人类发生的作用</guid>
            <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[&emsp;只要人有欲望，那么他就不再是无敌。而有欲望的人会在“毁灭”与"希望“这俩种力量面前完完全全臣服。]]></description>
            <content:encoded><![CDATA[<p> <!-- -->只要人有欲望，那么他就不再是无敌。而有欲望的人会在“毁灭”与"希望“这俩种力量面前完完全全臣服。<br>
<!-- --> “毁灭”的力量能把人求生的人逼向唯二的2个选择: 要么合作要么反抗。<br>
<!-- --> 而“希望”的力量让人着迷，比如: 财富、权力或是女人。  但“希望”这种力量就像是鱼饵，会吸引人，但
未必会上钩，原因在于这里的鱼饵并非唯一的选择，人通常还有其他更多更好的选择,且人的欲望没有极限,所以没有最好的鱼饵。<br>
<!-- --> 但是，如果把这2种力量一起应用出来，“毁灭”的力量在把人逼向: 要么抗争要么合作;那么再加下“希望”的力量，让人放下
“抗争”的动机。那么此时，这个人就只剩下一个选择了，也就是: "合作"。<br>
<!-- --> 除非是真正没有任何欲望的个体(无敌)，否则当这2种力量一起作用在个体身上后，且份量充足,那么这2种力量都将一起发生作用,
所导向的结果必然是个体心甘情愿地主动选择:“合作”。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2022-09-20】关于社会生存策略小结与新策略建议]]></title>
            <link>https://wuchuheng.com/blog/2022/09/20/关于社会生存策略小结与新策略建议</link>
            <guid>/2022/09/20/关于社会生存策略小结与新策略建议</guid>
            <pubDate>Tue, 20 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[&emsp; “生存”是第一原则，但，“天地不仁”，世界能供养生命的资源是限的。一旦生命对资源的消耗超过了上限，而生命又适应不了新的生存环境，]]></description>
            <content:encoded><![CDATA[<p> <!-- --> “生存”是第一原则，但，“天地不仁”，世界能供养生命的资源是限的。一旦生命对资源的消耗超过了上限，而生命又适应不了新的生存环境，
那么资源的上限便如同死神的镰刀，不管再怎么哀嚎也好，咒骂也罢。到这时，生命便是草芥，镰刀一来，也只能含恨离去。而这就是生命所赖
以生存的环境，而面对这样的生存环境，生命又是通过什么策略活下去的？  </p><p> <!-- -->  生命能看到自己过去，却无法看到自己未来，于是便产生了一个问题：明天我能不能活下去？很明显，这是一个还没发生的事，永远不会有明确的答案。
但只要有足够的情报，就能决定未来是朝着哪个方向演进的。所以生命的所有活动和进化本质可以看成是生命在收集情报，通过情报去决定“明天，我能不能活下
去”。比如猛兽，它们在尝试的过程中确定了比如獠牙利爪和强壮体能等等因素能决定捕猎的成败，更决定未来也能进行捕猎，从而决定了“明天，也可以活下去”
这一未来走向。而这些情报将会写进行生命的基因成为本能，传递下去。而弱小的个体，则可以依靠群体收集和共享情报，比如羊群，羊群越大，则羊群看到的
范围越广,只要个体羊不脱离群体，则相当于个体就能在群体中接收预警信号,相当于预警范围等同于整个羊群的视线范围。从而能在远处就能
收集到了狼群进攻的信号，通过这一信号情报，起到了提前逃生的作用，从而决定了“明天，也许也可以活下去”的未来走向。而人也是群体生命。  </p><p> <!-- --> 人尽管很弱小，但通过群体这一情报体系把每个人都联系起来，把个体的专长能力如，捕猎，采集，或是地理信息如东西南北，或时间信息如明天会发生什么， 情报都共享出来，从而促进群体更强大，保证了其中个体的生存。而到了这里，人还只是自然进化的生命而已，人的生命活动也只是按照祖先传承下来的基因本能 地去照做而已。但是后来，人类进化出了语言文字体系，使人类进入了文字传承时代，使人类能获取情报的来源也不再局限于基因,这种一个细胞中只能存放少量基因信息的载体 ，而是由大量的文字记载或口 口相传的情报， 利用这些信息便能从先人中获取传承，比如技术、经验,而这些是基因所没有的记载的。从而使人类能在前人的基础上，进一步发展起来,一代代繁 荣发展,甚至影响改变了环境。 但是直到发展到了今天计算机信息自动化时代.  </p><p> <!-- -->人类的文明发展与其它的生命的区别在于通过了文字语言记录了学习了前人的智慧，而不是来自生物基因中记录的本能。但是先人的所记载的知识
是需要一个漫长的学习过程才能人使用的，而如此庞大的文字记载，已经不是人类能学习过来的了。而在信息化时代，当计算机的程序本质上也是一种情报记录，不过是以逻辑运算的方式去记录，通过电能去驱动逻辑运算，从而实现自动化处理。假如一开始去学习他人所记载的知识只是为了应用出来，那么，为什么不用计算机程序来记录？这样就能实现一运行计算机程序就相当于他人的知识直接应用出来。而这是可行的，而当前也已经实现了。但是问题在于传播性和局限性，就算能用计算机程序记录他的人的知识，从而一运行就能相当于他人直接使用出来一样，而跳过了学习的过程，直接应用出来。但是这种程序的规范目前还是没有人实现出来，换话说，我想用，但我不知道怎么找。另一个就是局限性，就是说，就算我找到了，但我不知道怎么应用出来。如果说解决了这2个问题，那么就能借助前人所积赞的大量经验去解答一个问题： “就算我只有很少的资源，我明天也能活下去”,这是因为一旦成为现实，那个体手中就算只有少量的资源，只要个体遇到了问题，还是可以通过调用先人的经验程序来解决当前所遇到的问题从而回答了“明天也能活下去”的问题。而这一设想如果可靠，那么，也就缓解人天生想占有更多资源的欲望，其本质不过是想活下去了，而多了另一种选择时，也就没那么身不由己了。   </p><p> <!-- -->人类的文明之所以能发展今天这样，靠的是前人的积累下来的情报库。有了这个情报库，每当人类遇到不会的问题时，便可以去情报库中搜索相关的情报，
然后吸收这些知识，最后应用出来，从而解决问题。但到了信息化时代，人类所积累的情报库已经庞大到一个人穷极一生也不能完全掌握一个行业小分支的知识量了。这就是
为什么会有各种职业,且还在不断增加的原因。尽管每个人从这个情报库中吸收一门知识，专门负责一个职业，但随着情报库越来越庞大，行业分工越来越细，个人对知识的吸收还是占用了
越来越多的时间，光是从上学到出来担任一个职业，这期间就有10多年甚至20多年的时间，就只是为人从这个情报库中吸收如何担任这个职业所需的知识量。而这
还只是入了门而已。所以尽管人类的情报库一直在增长，但人的学习能力却没有成长--人对知识的吸入是很缓慢的,从而导致知识越多，学习越长。而人类之所以花这么多时间去学习不就是用来解决问题的吗？而学习不过是个手段而已，
那么能不能跳过这么长时间的学习，也一样能解决问题？所以这就是为什么要用程序来记录情报的原因了。尽管程序是机器的语言，不能直观地被人理解， 但程序能自动执行，
也就是说，机器能自己去解决问题。而人并不需要去理解去学习如何解决问题，只需要有其它人把解决问题的方案记录为程序，而使用它的人只要决定要不要让机器去解决
就行了，换句话说，目前为止，人类之所以能发展到今天繁荣的景象，靠的是先人留下来的积累，但现在，这个积累的信息量已经庞大到，就算要解决一类问题，要花费大量的时间去学习，就像是山越来越高，而学习的人却要从头式开始爬，爬的越高，才能用的越好，太累了; 所以让专业的人把解决问题的方式教给机器，那么量产机器就相关于量产专业的人，那么未来的人，遇到问题时，只要决定要不要让机器去解决，而不是花大量的时间去学习，做自己喜欢的事就可以了。    </p><p> <!-- -->我们人类很奇怪，我们身体内即有遗传下来的本能的兽性，又有后天培养的理性。我们的兽性是写在我们的基因中的，这个种本能让人自发去占有更多的资源，从而
去解答明天能不能活下来的问题，从而引发了至今都没能解决的“吃人”现象，撕开文明的外衣，展露出来的却时无处不在的内部斗争。但是我们人类又有了外部的传承(情报库)，这种传承让人能学习前人的智慧后，又通过分享的本能式传递到下一代，从而又让人类发展起来。  </p><p> <!-- -->直到文明发展到现在这样繁荣，人才逐渐脱离野蛮。而这都是基于人类情报库的成果，所以我完全有理由相信，利用好人类的情报库，引导人们去做自己喜欢做的事， 并使用程序记录他人的成果，分享给他人,让使用的人直接跳过学习阶段的时间花费，直接决定要不要执行程序去解决当前问题，将是未来人类文明发展的方向。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2022-02-04】展望非社会的生存可能性]]></title>
            <link>https://wuchuheng.com/blog/2022/02/04/展望非社会生存的可能性</link>
            <guid>/2022/02/04/展望非社会生存的可能性</guid>
            <pubDate>Fri, 04 Feb 2022 17:32:00 GMT</pubDate>
            <description><![CDATA[&emsp;三体中有一个词叫“猜疑链”，尽管小说中说，这种“猜疑链”在人类社会中不会无限延长下去，但只要去推导下就会发现人类]]></description>
            <content:encoded><![CDATA[<p> <!-- -->三体中有一个词叫“猜疑链”，尽管小说中说，这种“猜疑链”在人类社会中不会无限延长下去，但只要去推导下就会发现人类
社会本质就是个无限轮回的“吃人”游戏。那么是什么力量，形成了人类的社会，又是什么原因变成了“吃人”的局面。<br>
<!-- -->生存是第一需求，而生存的资源有限，开发生存资源(比如粮食)，成了人类的天职，而个体能力有限，群体则开发资源效率更高，这就是
人类社会为什么会形成的根本力量 —— 开发更多的资源。然而人类社会群体的形成也为后来的“吃人”游戏做了铺垫。  </p><p> <!-- -->人类能看到了过去，却看不到未来，那么人类就产生了一个问题： 明天我还能不能活下去？未知就是人类最大的生存威胁 — 也就是恐惧。
这就是为什么，古有占卜师或哲学家等，今有数学物理等，其本质都是在解答一个问题，未来是什么？也就是老天爷能不能让人类活下去，
让我活下去。前面说到，社会已经形成，人类的心就是最近的未知。假设一个有2个人的场景：就我和你，我们是选择合作共同生存还是火拼？我们
先来定义下善和恶： 不攻击同类，是善。反之，是恶。我不知道你在想什么，不管你怎么解释，都无法证明你是善意，还是恶意。同样的，
你也无法知道我是怎么想你的：是善，还是恶。那么既然无法证明。那应该采取什么策略？是善还是恶？假设当前没有任何的生存的资源，
所以我们必然是善意的，只有共同合作，才能提高资源的生产效率，降低死亡的风险，这样才是最优的生存策略。现在再假设，我们已经
度过的生存的资源危机，已经有富余的生存的资源了。尽管团体合作能提高效率，降低风险，但有风险就是有风险，没人会喜欢风险，低风险也
不行。现在已经有了富余的生存资源了。但策略还是只有2种： 善意则合作，恶意则攻击。恶意意味着，我赢了，就是能占有你的血肉和资源，反之，也一样。
如果我是善意的呢？由于人心无法证明，我就无法让你相信我的善意的，就算我愿意选择不攻击你，那么，我要承担的不仅是开发生存资源的风险
也要承担来自你攻击的风险。既然执行善意的策略的风险如此高昂，那我也只能被迫，攻击你了。这就是人类”社会吃人“的真相。那么能不能
破解这个困局？有的。 </p><p> <!-- -->人类社会形成的根本动机是提高生存机率，也就是抱团更容易活下去来的想法。这种想法的根本依据来自于2个方面，一个通过人类社会这个群体实现对未知环境的信息
采集，从而消除生存环境的未知因素，降低风险。一个是赋能，我不是铁匠不是手工艺人，但只要群体有这类人，那么只要我在群体中，那么我就能
拥有铁匠的工具，手工艺人的作品。而我并不需要这些技能，就能赋有这些技能最终成果。所以人类社会之所以能提高生存机率： 一来自群体的信息采集和共享，二是赋能。
前者消除风险，后者提高生产资源。只要这2个支柱被拆掉，则人类社会群体将会被解体。而如今已经有一根支柱崩塌了，而第二根柱子也将崩塌。
信息化时代下，信息由人来采集，交给计算机处理后流转到人们面前。相对于以前，人和人的信息传递效率更高。而随着感应器在物联网暴发，信息将完全由机器来采集，
信息的采集方面人将不被需要了。社会的形成的支柱之一，已然崩塌。而信息处理后，再传给生产机器，生产资源，则人的技能将不被需要,从社会金字塔底层从事简单劳动
人群被机器替代开始，向上逐层奔溃, 直到保留最顶层的那个人。人类社会的第二根支柱也将彻底崩塌了,
形成的局面是，寡头统治都大部分的资源，因为人已经不被需要了.尽管社会崩塌。但人根本需求依然存在，就是生存。那么希望在哪里？活下去的希望在哪里？希望就是人类特有的
资源，也是只有人类才能生产出来的东西———“智慧”。  </p><p> <!-- -->智慧是目前已知的，唯一可能共产的资源。比如数学公理等基石，已经被人类共有。但它的问题在于，学习成本过高，而人类需要的是它的果实，也就是由智慧生产出来的
生存资源。假设，现在的局面是社会已经崩塌了，人的根本生存需求依然存在，那么，人能不能在非社会环境活下去？智慧不一定是数学公理这种高深的东西，凡是有利于生产的
方案，就是智慧, 猴子拿石头砸果核，取果仁，获取了生存的资源，这一过程这一可行有利于个体生存的想法就是“智慧”。而在非社会环境下如何应用这种智慧，答案是基于物联网直接作用于生产，比如在千万人中的某一个，开发出了生产粮食的解决方案应用软件，发布到出去，在
公共的平台上，不限国家，宗教，肤色，民族，年龄，性别，都能在任何地方，任何时间，无需任何学习成本，直接使用，直接用于生产。而成千上万的人类，把他们的智慧，转化
为数码，基于网络，可以无限供应出去。这就是”开源智慧“， 这时，人将能自由地对外界采集信息，以及直接生产，而不用学习成本，只要这个智慧方案在人类中有人提供出来，就
相当于全人类都能拥有。这就是“开源智慧”方案，由于已经非社会了，吃人自然也就不存在了。  </p><p> <!-- -->"开源智慧"方案能在社会奔溃后，个体还有一个能活下去的希望,一个选择。假如而传统社会必将奔溃，寡头格局形成，人类不被需要，那么人类能活下最有利的决策就是"共享智慧"，并基于互联网的基础设施，把共享智慧
决策开发到极致。这样才能在崩溃的社会中活下去。而共享智慧也是人类唯一可能突破地球，走向星辰大海的唯一希望。</p><p> <!-- -->地球的资源是人类的上限，如同死神的镰刀，不断收割超出这个上限的生命。而唯一的希望就是"开源智慧"方案，唯有把人类
的智慧共享共同发展，才有可能突破地球，走向星辰大海。这就是"开源智慧方案"的终极目标，只要资源无限，管它社会存不存在，"吃人"自然没有理由存在。</p><p> <!-- --> 为什么要这么做？难道当前的生存环境不友好吗？凭什么的预测是对的？当然的环境当然友好，我的预测也可能是不对的，但是当前的环境友好并不能掩盖人类
自身渺小脆弱的存在。在社会中，个体确实能通过关系网，收集更大范围的情报，更强大的头脑，更发达的技术。事实就是提高了人类的生存机率。但这不能解决个体是
渺小脆弱的事实。哪怕是国王，国家领袖，也不过是通过人类社会关系网来强大自身，去掉这张关系网，也不过是只渺小的猴子而已。而这张关系网这之所以能形成核心
的根本动机，是"共存"这一人类共同心愿来驱动的，说人话就是： 我需要你的帮助，也请你来帮助我。从而形成了微妙的平衡，而一旦有一边的动机，出现了改变，
那么这一平衡就会被打破，说人话就是，已经开始有人，已经有庞大的生产力和情报收集能力，而这些已经脱离人的依赖，说人话就是，我能生产大量的粮食，我能知道更多
的消息。有粮食我保证现在活着，有情报我能保证未来我活着。就是左手情报，右手产能，而当这些依赖于科技，而不是人时，平衡就已经倾斜了。双方不再是相互依赖关系
没有了相互依赖的动机，则社会关系网也就奔溃了。这就是"非社会"，而不被需要的人的根本需要依然存在，就是我想活下去。 那你说，该怎么办？  </p><p> <!-- --> 人与人之间有差距吗？差距是什么？ 是智慧.所谓的智慧,不过是对信息信息处理能力的不同而已,比如: "这是一只笔",商人看到的是这支笔的成本和价值,而作家看到是工具,
而文盲比如我,看到的不就是一支笔吗?所以同样的信息,不同的人.接收的信息是一样的,而处理信息的能力却是不一样的.也就是俗话说的"悟性"或"智慧".但这种说白了就是信息处理
能力的,跟计算机的程序是一样的概念.而我们人类就是靠这样的东西,创造了工具,粮食,资源而活下来的.所以也可以说,智慧是生命所需,换句话说,信息的处理能力是生命所需,换句话说,
把人的想法以编码的写出来,也就是程序,可以为生命所需.而程序的复制成本几乎是0,也就是说,以程序为载体的"智慧",理论是来说是无限的,可以为任何人所需.这就是突破了个人的悟性
限制了,需要就用这份"智慧",不需要,那就不用.但是为什么今天这个信息时代也,信息可以被处理,为什么人不能拥有这种自由,这种自由自在h共享智慧的自由呢?它就应该是由人生产出来的。理论上它就应该像空气一样，为生命所需，却又无穷无尽。但是为什么,没有实现呢?没有这种自由吧?这种名为"信息处理自由"或"智慧自由"呢?  </p><p> <!-- -->我们人类跟地球上的其它生物一样,只有基因中传承了"本能(知慧)",却没有了祖宗在世时的记忆(数据).这是我很不理解的,可能是基因的信息载量有限吧.但有今天的信息时代,不一样的了,
我们完全可以把人的"智慧"写成程序,把人的记忆写成数据,一代又一代传下去,前人的想法能保存下来,前人的经验也能保存下来,这是不可想象的,想想,我遇到个事,今天我遇到个事,先去数据库找下有没有其他人,或祖宗遇到过,其次,它们是怎么解决,解决问题的智慧(程序)是什么,我是不是只要执行这个程序,就能得到什么样的结果.当这样的事发生在现实中时,直接影响现实时,
什么是什么样子? 关键是,如果是少量的,复制的成本可以很低,甚至是0.  </p><p> <!-- -->这就是我的展望!!!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2022-02-01】希望是什么?]]></title>
            <link>https://wuchuheng.com/blog/2022/02/01/什么是希望</link>
            <guid>/2022/02/01/什么是希望</guid>
            <pubDate>Tue, 01 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1 什么是最可怕？]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_wVXI" id="1-什么是最可怕">1 什么是最可怕？<a class="hash-link" href="#1-什么是最可怕" title="Direct link to heading">​</a></h2><p>这个世界上最可怕的东西是什么？是未知。我不怕伤害，不怕流血，甚至不惧死亡。唯独害怕，不知什么时候会受伤，不知什么时候会死掉，让人没有任何的心理
准备，无法坦然面对，怎么能不怕。这世界最大的2个未知，一个是老天爷，一个是"同类"。<br>
<!-- --> 在老天爷面前，它安排了我的一切，已发生的和未发生的，我不过是只虫子罢了。而我也早就适应了老天的摆弄，因为未知，所以无法改变，只能接受命运的
安排。<br>
<!-- -->另一个最大的未知，就是"同类"，或者说，叫"人心"。人心是这个世上最可怕的东西，比老天爷还可怕。我永远也无法知道身边同类的心，是善意还是恶意。为了求生
，势单力薄的我不得不与同类结盟，如果是共存相互依赖，开发新的生存资源，这种关系叫"朋友"，如果是为了吃人而与同类走到一起，这种关系叫"敌人".由于
人心不可测，我永远无法知道我身边的同类，到底是朋友还是敌人，就算确定了，也会变来变去。所以人心最可怕。</p><h2 class="anchor anchorWithStickyNavbar_wVXI" id="2-什么是希望">2 什么是希望？<a class="hash-link" href="#2-什么是希望" title="Direct link to heading">​</a></h2><p>希望就是，我看到了最姜好的事物，它就在未来的画面中，它是
那么的明确、真实和向往。有了这个画面，我不知道这中间我会遇到多少未知的危险，多少恶意，多少想吃人的同类，但我绝不害怕,因为终将被我克服。只要我好好活下去，
全力以赴做好准备， 我相信未来画面必将成为事实。有了希望，未来不再是不确定的状态，它坍缩成被以我意志掌控的事实。我并不危险，我，就是危险。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2022-01-04】如何找线索？]]></title>
            <link>https://wuchuheng.com/blog/【2022-01-04】如何找线索？</link>
            <guid>【2022-01-04】如何找线索？</guid>
            <pubDate>Tue, 04 Jan 2022 18:29:00 GMT</pubDate>
            <description><![CDATA[1 一个事件的发生是刻意还是巧合？怎么区分？]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_wVXI" id="1-一个事件的发生是刻意还是巧合怎么区分">1 一个事件的发生是刻意还是巧合？怎么区分？<a class="hash-link" href="#1-一个事件的发生是刻意还是巧合怎么区分" title="Direct link to heading">​</a></h2><p>人不可以预测的因素推动事件的发展，那就是巧合或意外，是天意。如一阵风或是一场梦，往往没有预兆无法预测却能响应地方的风景或是人的心情。但在估有规律下事件发生了，而且有人为参与在内并推动事件的发展，那么这个事件就是刻意的，被安排的。 如常见的新闻报导，这件个事件是由人来推动发生的。先不判断新闻信息的真实性和完整性，那么事件是由人来推动发展的，那必然需要人的动力，那动力是哪来的？是动机来的，是不可告人的目标来的，也就是阴谋。  </p><h2 class="anchor anchorWithStickyNavbar_wVXI" id="2-人的动机是什么">2 人的动机是什么？<a class="hash-link" href="#2-人的动机是什么" title="Direct link to heading">​</a></h2><p>是利益，准确的来说是生存。资源是有限的，而生命的维持是需要消耗资源的，所以生命活动的最根本动机说人话就是"搞钱"。既然有人去推动事件的发展，那么推动的人必然是有利可图的，对人们来说，真相或许不重要，但钱，绝对重要。如有一条新闻内容如下：<br>
<!-- -->日本计划2022年向大海倒核废水<br>
<!-- -->内容就这么个内容。先不说新闻的真实性，这个报导是从哪里传播过来的，是什么人在传播。他们为什么那么积极在传播这个消息。如果这个新闻看起来是个坏消息，那么对日本不好，就一定对日本的敌人好。如果这个新闻是日本主动放出来的，那么他的动机是什么？为什么要这么做，日本不知道这个坏消息吗？会引起世界抗议吗？有什么好处？假设是日本放出来的消息，那他会不会在试探外界的态度，如果是，那这个消息可能要更坏，如果不是，那日本为什么不出来澄清情况。日本现在在做什么？<br>
<!-- -->所以消息不一定是真的，那是人为放在明面上的一小部分，大部分的信息是隐藏在下面的，而破译这些隐藏信息的钥匙就是人的动机。基于这一点，结果现有的状况可能推导不一样的东西出来。而这个才是与人打交道时最重要的，如说话，只是说话者想让人相信他说的信息，但真实是什么情况，他为什么要这么说，他的动机是什么，他想从别人这里获取什么？友情？信任？认同？还是金钱？等等。结论就是为不要相信人在说什么，要看他在做什么</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2022-01-02】社会是怎么形成的？]]></title>
            <link>https://wuchuheng.com/blog/【2022-01-02】社会是怎么形成的？</link>
            <guid>【2022-01-02】社会是怎么形成的？</guid>
            <pubDate>Sun, 02 Jan 2022 16:44:00 GMT</pubDate>
            <description><![CDATA[是怎么样才形成今天的社会，我想是在以下的5个条件下形成现在的社会状态的。]]></description>
            <content:encoded><![CDATA[<p>是怎么样才形成今天的社会，我想是在以下的5个条件下形成现在的社会状态的。</p><ol><li>资源是有限的</li><li>生存是第一前提</li><li>思想不透明</li><li>未知是生存最根的隐患</li><li>人的合作分工能提高生产效率</li></ol><p>人想活下去就需要资源，而资源是有限的。获取的方式有2种：  </p><ol><li><p>”农民”方式：人以付出体力和心力的劳作方式从自然环境中生产出有限的资源。整个过程需要时间且具有风险。<br>
<!-- -->优点： 通常到获取到资源，是个人都能做<br>
<!-- -->缺点： 低效率和天灾人祸的高风险  </p></li><li><p>”地主”方式：从别人手里抢夺现在的资源。<br>
<!-- -->优点：高效率和低风险<br>
<!-- -->缺点：基于农民之上，有被农民推翻的风险  </p></li><li><p>为什么会形成社会？<br>
<!-- -->人为了活下去，不得不选择当“农民”或“地主”，而不管人最终选择当“农民”还是“地主”，合作分工的效率往往比个体要多得多。而方便合作分工自然就要群居，慢慢发展形成了部落、民族和社会。</p></li><li><p>为什么要有战争？能不能避免？
战争本质上就是在争抢资源，这同2条狗在争一块骨头是一个道理。资源有限，而生存是第一需求，人要资源才能活下去。而获取资源，要么当”农民“，要么当“地主”，而在2者都可以选的情况下，人都会倾向后者，因为后者高收益低风险，也就是说，只要有条件，人的本性其实是更倾向发起战争的来掠夺他人财富的。<br>
<!-- -->但也有另一种看起来不像是为了资源为动机而发动的战争--“报复”。报复性战争看起来是为了毁灭对方，但其实是一种消除未来自己被他人掠夺的风险行为策略。这更像是在对他人宣告，如果将来有人胆敢抢夺我的资源，也要承担相应的“报复”。所以说来本质上还是因为资源，只不过一个是为了现在，一个是为了未来。<br>
<!-- -->那么战争能不能避免？哪怕是当今现代化社会，战争依然存在。如果破坏5基本条件之一，侧打不起来，如：  </p><ol><li>如果资源是无限的，没有战争的动机，打不起来</li><li>如果生存不是第一需求或不需要消耗资源，没有动机，打不起来</li><li>如果人与人之间的思想是透明的，打不起来，或着很难打赢不如种田</li><li>如果未来是确定的，那就是注定的，打不打那就是注定的</li><li>如果分工不能提高生产效率，那么社会不会存在，打不起来</li></ol></li><li><p>共产主义能不能实现？<br>
<!-- -->这要看是什么东西共产了，如果生产出来的东西接近无限且被人们需要，就像空气一样，那么这种以无限产能的方式来实现某样东西共产是可能的。但现实世界中资源大都是有限的，实现共产的方式如果以人为资源生产者和分配者，那么是不可能实现共产的。因为分配者和生产者在意识能资源是有限时，而人与人之间的想法是不透明的，而资源就这么多，那么做事的动机就不一样了。如从分配者角度想：资源就这么多，多分配给别人一点就少一点，干嘛不多分配给自己多一点。典型的案例可以参考上世纪的大锅饭和开小灶。而作为生产者，既然已经有人负责分配资源，那么我为什么要承担过度劳作和职业病等风险呢，能少做点就少做点，反正最后有人负责有吃有喝。由于大家的动机都不一样，所以人为的共产主义是不可能实现的。  </p></li><li><p>现代社会同封建社会或奴隶社会有什么区别？<br>
<!-- -->基本的5个条件有变化，但没有质的变化。同古代社会相比，当今社会的5个条件有以下变化：  </p><ol><li>资源还是有限的，但由于科技的进步，相对来说够用。</li><li>生存是第一需求，而人需要消耗资源才能生存，这点也没变</li><li>人和人之间的想法是不透明的，这点没变</li><li>未来不再是不确定了，由于科技的进步，而是近期可预测了，如天气预报啥的</li><li>合作分工能提高生产效率，但由于科技的进步和机器的投入使用，效率大大提高。    </li></ol><p>可以看出，由于科技的加持，让大部分的条件发生的变化，直观对比就是资源产量大幅提升，而未来的近期内的风险也通过科技的预测消除了风险。整体来说，是改善了人们的资源，但基本条件还没有被打破。</p></li></ol><p>5 那么人们是怎么看待"地主"的？
首先在5大条件不变化的情况下，人的天职就是"农民"，而如果有第二个"地主"选择时，人会毫不犹豫选择后者。仅仅是因为"地主"这一决策能带来高效率和低风险而已，
换话说，人不是在反对"地主"，只是在反对"地主"不是自己。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【2021-11-29】广东2号绿道-海边日出]]></title>
            <link>https://wuchuheng.com/blog/【2021-11-29】海边日出</link>
            <guid>【2021-11-29】海边日出</guid>
            <pubDate>Mon, 29 Nov 2021 07:19:00 GMT</pubDate>
            <description><![CDATA[天还没亮，虽是秋天但温度舒适，无风。我收拾好帐篷往山地车一放，便往1公里外的广东2号绿道的海岸驶骑行过去。边上的路灯还亮着，路两边的高矗的连绵山脉]]></description>
            <content:encoded><![CDATA[<p>天还没亮，虽是秋天但温度舒适，无风。我收拾好帐篷往山地车一放，便往1公里外的广东2号绿道的海岸驶骑行过去。边上的路灯还亮着，路两边的高矗的连绵山脉
像是一座座巨人，在寂静的灰蒙蒙的幕色下，像在沉睡又像是在暗中观察从眼前而过的渺小生物。出发没多久，似乎嗅到了空气中有点海风的清新味道，前方传来
机器作业的轰鸣声音。加快蹬着自己的小单车，耳边风声呼啸，前方视野，豁然开朗。<br>
<!-- -->远方天海相接处，泛白的天空下，灰白的云边，多了一霞光。海面上渔船时不时穿梭而过，伴随着机器的轰鸣声。脚下海浪不停了拍打岸边，发出阵阵声响。背后的
大山，还是自顾自在趴在那睡觉。<br>
<!-- -->又过一会，天空越来越亮，眼前的世界正在夜幕下缓缓拉新一天的序幕。天水间的云边像是渡上了层金边。天水间慢慢露出一个红色的圆边，慢慢升起，一湾朝霞倒影在
海面上缓缓铺开，从天水间连接到我脚下。太阳越升越高，海面倒影的朝霞越是铺开，越是刺眼，时不时穿过一条轰鸣的渔船。背后的山已经褪去夜色，显露出它的真面目，树林中时不时
传出一两声清脆的鸟鸣，让这个本该凋零的秋天格外尴尬。<br>
<!-- -->这时，太阳已经完全升起来了。路上出来晨练的大爷大妈和来往的车辆渐渐多了起来。路边时不时穿梭一两条狗出来。天亮了， 新的一天开始了。</p>]]></content:encoded>
            <category>流浪日记</category>
        </item>
        <item>
            <title><![CDATA[信息是什么?]]></title>
            <link>https://wuchuheng.com/blog/信息是什么</link>
            <guid>信息是什么</guid>
            <pubDate>Fri, 29 Jan 2021 13:12:34 GMT</pubDate>
            <description><![CDATA[&emsp;如果我们以信息的角度来看过去现在未来这条时间线，那么过去的事实就是已经确定的信息，现在就是在无限的可能留下一部分成为确定的信息，其]]></description>
            <content:encoded><![CDATA[<div><img loading="lazy" src="https://qiniu.wuchuheng.com/images/xiannuon.jpeg" class="img_N7CL"></div><p> <!-- -->如果我们以信息的角度来看过去现在未来这条时间线，那么过去的事实就是已经确定的信息，现在就是在无限的可能留下一部分成为确定的信息，其
它的可能都消除掉，而未来则是无限可能的信息集合。信息的作用是消息未来无数的可能，而保留下来的则是已经发生的事实，这也就形成了今天不停演变的客观
世界，反过来说，现在的世界和以后的世界都是由信息来决定的。只要事物是在不停地演变，那么就说明事物是接收信息并处理信息。人就是其一。而部分的信息
人是可以引导的，比如人与人之间的书信，语言或信号。从而人可以通过信息的方式来引导事件的发展。</p><p> <!-- -->信息是不断演变的，可以看成是不停在消除可能从而使全局无限可能局部有限可能消除成为确定的状态，也就是现实，而这个现实本质也是信息，在
确定后，也在不停演变消除外部的可能。所以信息状态只有演变这种状态。但如果从时间的看看，在同一空间上，昨天和今天是不同的，如果我们只观测这2个时
间点，那么它们是不一样的，可以看作是在同一位置上，从昨天一直演变到今天，可以看成是有时间方向的演变，可以理解为信息从昨天传递到现在。同理，空间
上也一样。我对人说一句话，声音的传递在空间的演变正在发生的太多太多的演变了，但只看我跟他这2人，这2个点，那么就是刚才他对我说的话我听到了，这
是时间可心看成是有方向的，空间上则是，他在那对我说话了，我听到了，看成信息是从他那边传到我这边了。所以只看2个点的话，而中间的演变看成是传递的
话，那么，可以认为信息在这2个点之间传递。而以人的意志来传递信息出去，如果这个载体是电子的，那么信息在空间的传递则有了光速这样的物理属性。<br>
<!-- --> 古代，人们能引导的信息的传递依赖于书信语言等这种局域小速度慢的方式，从而有局限，距离远的话代表着时间长见效慢甚至不可靠。而当今，
远距离的信息传递主要以电子或电波为载体来传递，速度可以逼近光速，从而以人能引导的信息演变加速，这就是为什么社会变快的原因，以后还会更快。如果信
息的载体是电子的话，那么它是可以以数字的形式交给机器来处理，也就是程序。<br>
<!-- --> 再说一次！世界的演变是由信息来决定的，而人能引导部分信息的演变（如实现人的意图），而电子程序能处理电子为载体的信息，那么人是可以
反这些信息电子化后交给程序来处理，从而完成信息的引导实现那个可能。由机器来处理信息是可以实现的，而人们又想在未来实现他们的意图--引导信息演变
最终意图把那个全局无限可能的那个可能演变为事实。所以机器处理信息是被需要的。<br>
<!-- --> 程序是一种记录人的思维逻辑的信息，而载体是电子。传递是非常快的，所以人人都快速获取程序来处理它们的程序的可实现的。但由于人性所导
致的集权化短视，导致信息处理不能分布式化，最大的现实就是基本上的程序，一旦没有背后企业的支持，那么也就用不了，因为是集中化，而不是分布式化，集
中化的背后的意图是而集中中央的人来引领消息，而不是用户，从而用户难以通过这种集中化软件来为自己处理信息。一个简单的例子就是美团外卖这种集中化软
件可以收集用户的信息并处理从而根据自己的意志来引导消息的演变，而不是用户，那么用户是否也能拥有这样的处理信息收集并处理的程序机器呢？可以的。<br>
<!-- -->前面已经说了，程序也是信息，当它以电子为载体且可以轻易复制的，传递给所有的用户都是可以的。而用户也是需要这些按他们自己的需求来获取
自己需要的软件且这些软件都是分布式的，或着说是以用户的意志来处理信息的，从而或能实现用户自己本身的意图或价值之类。那么为什么现在太多太多的软件
，却没有出现分布式的呢？（注：我这里的分布式是指以用户意图为主来处理信息，会表现为用户各自的软件只为自己的意图实现而处理消息）。 是因为技术门
槛和分发消息的标准。使用只为自己的意图服务并处理自己消息的软件，目前还中在一些极客中少数才有， 如果一个好的软件交付方案，使用户不用关心后面的
技术问题且快速获取这种只服务自己意图的软件？有的。一个<code>http</code>互联网公开访问和<code>docker</code>迁移加上一台用户自己的服务器，和一个开源的应
用分发社区（社区也是分布式的， 用户不中意，自己可以获取为自己服务的软件分发社区），通过这个社区就是就能以一个链接获取只为自己服务的软件，运行
在自己的服务器了。<br>
<!-- --> 像支付宝，美团等，本质是可以看成是<code>只为自己意图服务的软件</code> + <code>他人的信任</code>。 也是就是说只要能解决信任的问题，那么，别人也
一样会用你的<code>只为自己意图服务的软件</code>。”信任“可以看成是未来的可能，不过是比较大的可能而已。 在一个局部的变量中如只有我和你，我许诺明天参加
你的生日，但本质上我就是一个变数，只要时间还没到，永远无法确定我会不会兑现。那么有没有一种方式让我这个变数从局部之中也就是你和我之中变成一个确
定的数呢？有的？就是区块链，区块链本质就是不可更改，你和我这个局部的约定变成区块不可变更的记录，且有抵压物在， 那么在我和你之间这个局部中，由
于不可以变更的约定且抵压物在，我就变成了定数，如果不考虑外部的意外变数进来（比如突发状况），我和你的约定就是未来必然发生的事，我们已经在按自己
的意图引导且确定了未来（这样想，未来真的是不确定的吗？真的不是注定的吗？）。 现在核心已经有了，就是不可以更改的记录，使得基于这样的机制，哪怕
从不认识的人也可以给它钱，让他给我送个外卖。是的，只要能预测到我给钱，你给我外卖，我又何必在乎你是不是美团呢？
<!-- --> <!-- --> 那么这个机制要怎么实现才方便快速呢。只能说，可能就是用户表明自己的意图什么形式都可以，只要表单用户自己的意图，如就像点个外卖一样
，整个过程无感，跟平时点外卖一样，还是用户的意图很明显就是”我给钱，你给我外卖“这个信息，可以记录到链中，且加密，只有双方有权查看和公布给他人
查看。 而接单的许诺方也要付出抵压物。 直到双方约定达成。自动解除等价抵压物和转账等。整个过程要无感知</p>]]></content:encoded>
            <category>心情文章</category>
        </item>
        <item>
            <title><![CDATA[感知和同化是什么?]]></title>
            <link>https://wuchuheng.com/blog/感知和同化是什么</link>
            <guid>感知和同化是什么</guid>
            <pubDate>Tue, 24 Nov 2020 01:11:51 GMT</pubDate>
            <description><![CDATA[我与非我的区分？]]></description>
            <content:encoded><![CDATA[<div align="center"><img loading="lazy" src="https://qiniu.wuchuheng.com/images/neveNet.jpg" class="img_N7CL"></div><h3 class="anchor anchorWithStickyNavbar_wVXI" id="我与非我的区分">我与非我的区分？<a class="hash-link" href="#我与非我的区分" title="Direct link to heading">​</a></h3><p> <!-- -->我是谁？人无法回答这个问题，但却能意识到我就是我，只是说不上来，我是什么。 但，如果我们以感知层面来区分我与非我的区分，则在现实中
很容易就可以区分出来。我们能感知身体的5觉并驱动它做任何我们想让它且它做的到的事，也就是说我们之所以会认为它（身体）就是我，是因为我们知道这个
身体是什么并以我们的意志来驱动它，如果我理一次发，剪去的头发与长有头上的头发，我认为身体的头发才是自己的一部分，剪去的这部分我无法感知到，则不
是我自己的一部分。所以，从感知层面来说，人是可以区分什么是我，什么不是我。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="感知的意义">感知的意义<a class="hash-link" href="#感知的意义" title="Direct link to heading">​</a></h3><p> <!-- --> 我之所以会认为活在这个世界上，是现实中我凭借身体感知到的，尽管往往只局限于身体的范围。换句话说，如果身体死掉了，我自己也就不复存
在了。而身体的维持是需要资源的，而有限的资源，让自己时刻面临着消失的风险。假如难以创造出更多的资源（如粮食），那么消除威胁自己存在的风险则是另
一种策略。那么如何消除这些风险呢？人这所以认为身体不存在任何风险是因为身体就是自己，人能感知身体也能驾驶身体，所以这种能被自己感知且以自己意志
驾驭的物体，人称之为“我”，我则对”我“没有任何风险。所以要消除未知的风险，就是感知到它，最后以自己的意志驾驭它。这也是人为什么要学习，学习就
是肢体的延伸，当我学习了一种新的知识，那么在这片感知已经到达的区域中，风险则不存在了。“包容”的意思是我包容你而未必是你包容我。当我包容你的时
候，从我的角度来看看，你已经成功我肢体的一部分了，你的行动是我的意志在驱动和你的感知能到传达过来，那么，你在符合这些条件的同时你就是我了。感知
的意义就是，消除风险。它是意志驱动现实的前提。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[谁在抛硬币?]]></title>
            <link>https://wuchuheng.com/blog/谁在抛硬币</link>
            <guid>谁在抛硬币</guid>
            <pubDate>Sat, 31 Oct 2020 23:35:00 GMT</pubDate>
            <description><![CDATA[&emsp; 杞国有人忧天地崩，身亡所，废寝食者。--出自《杞人忧天》。就结果来说，杞国人到死，天也没塌下来。作为历史的观测者，我们可以尽情笑]]></description>
            <content:encoded><![CDATA[<div align="center"><img loading="lazy" src="https://qiniu.wuchuheng.com/images/coin.jpg" class="img_N7CL"></div><p> <!-- --> 杞国有人忧天地崩，身亡所，废寝食者。--出自《杞人忧天》。就结果来说，杞国人到死，天也没塌下来。作为历史的观测者，我们可以尽情笑
这个傻子，至少他有生之年都不用去担心这么个问题，那么此时此刻，我问你一句： 天，真的不会塌下来吗？你的举证有很多，古时诸如杞人忧天，当代宇宙膨
胀假说云云（吃饭撑的）。总结就是：基于过去，推测未来。过去天没有塌，相信以后也不会塌。发现了什么吗？我们并没有确定未来，只是相信对未来推测--
不是确定。<br>
<!-- --> 如果因果律就是宇宙运行公理，那么一枚硬币，在过去，已经抛出过一次了，过去已经是确定的事实，那么现在再抛出一次，如果因果律真的有效
，那么这一次抛出的结果在出现之前，就能推测未来必然出现的结果。结果是：无法预测。要么就是因果律的因子数据（公理）没有找到来确定未来必然发生的事
，要么就是因果律对未来不生效。<br>
<!-- --> 好，再问一次？一枚硬币抛出前，是正面还是反面？答案是无法确定。我们之所以相信因果律，是因为基于去的生活经验总结出来的引力理论，
所以我们相信硬币要掉下来，可现存的理论却无法预测硬币的正反面。从历史的观测中，我们相信万物之间有其联系，从而总结出各种理论来预测未来，结果总是
吃力又不太准确。过去和未来不一样，感觉就像是一个已经计算出来的处理结果，一个是正在计算中的程序，一个正在创造既定事实的东西，让人看不清。</p><p> <!-- --> 我们总是相信未来是可以预测的，人类也一直在做这样的努力，当人类抬头第一次仰望星空时，就已经在观测被遮住的迷雾--那里将会有什么事
发生。这种观测本能使人拿起一块石头并打算（预测事件走向）砸开果壳。纵观历史，古人总喜欢把人和万物隔离起来并进行单独观测，这是有原因的，在个体能
力去驱动世间万物来维持生存总是有限的，而同他人合作能放大个体能力。如何预测世间万物事件的走向，是需要大量的观测才能总结出其中的规律，而个体的领
悟（观测）总是有限的，我们能预测自己人生的走向，但我们难以预测群体的走向，如果借助古代的《周易》这种整体运行规律类的经验，能窥探大致， 但精度
很差，如“亢龙有悔”能预测盛极必衰的未来历史事件走向，但却预测不了什么时间什么人物什么地点必然发生什么。 而借用当代分解理论则精度准，如抛出一
枚硬币必然落体，缺点就是这个种精度很高的规律是由分解格物致知得来的，我们能预测必然落体却难以跟踪这个局部发生的事件对整个大的格局走向起到什么作
用，这种类于，我们知道什么时间地点有星星之火，却无法预测这个星星之火在未来是寂灭还是燎原。这是由于当前分解法理论是以屏蔽外界各种联系才得出的结
论，想要用分解法来预测精准大局抛走向，对分解法的理论数量（越多越好）和融合一个整体都有要求。<br>
<!-- --> 那么我们为什么要预测人？如果我们能更接近的万物至理，就能更准确预测未来，但纵观历史，全是人与人之间的尔虞我诈，不停在研究人性，研
究万物至理或《周易》规律反成旁门左道。其原因在于，研究在于穷尽一生或难以窥探万物至理一偶，而如果看透人则能预测这个人将来会发生什么，简单的如：
你是做什么的？答： 我是木匠！那么就能预测出他未来木匠的生活场景，他作为木匠的部分未来就已经被预测到了，假如他未来跟你有交集，也就是间接预测你
未来的部分情况。<br>
<!-- --> 整个历史几乎都是在研究人性，来预测未来，那么准吗？不准。就算看透一个人，那视角也仅仅是局限在人这么个群体之中，能预测这个人会干什
么却预测不了他会不会掉坑里导致测不准这种情况（当前已有的观测规律，数据不足够也预测不了）。相对于要学习学习众多的观测规律且效果在当下不一定好的
前提下， 观测人则显得经济些。
那么观测后做出的预测的意义是什么？时间就是一只手，把人推向未知的极端。而预测在结果破出前，让我不那么惶恐，除此之外，毫无意义。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[偶悟笔录]]></title>
            <link>https://wuchuheng.com/blog/偶悟笔录</link>
            <guid>偶悟笔录</guid>
            <pubDate>Sat, 21 Sep 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[【2019-10-21】我在意人的眼光人的想法，那TA是否就限制了我？]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_wVXI" id="2019-10-21我在意人的眼光人的想法那ta是否就限制了我">【2019-10-21】我在意人的眼光人的想法，那<code>TA</code>是否就限制了我？<a class="hash-link" href="#2019-10-21我在意人的眼光人的想法那ta是否就限制了我" title="Direct link to heading">​</a></h3><p> <!-- -->别人对我爱理不理，我恼怒，对于那些非善意的眼光或者失礼的眼光我是在意的，基于我自身的处世原则来评判<code>TA</code>的行为。从而有种超越想<code>TA</code>证明自己不比<code>TA</code>差比<code>TA</code>强，来证明<code>TA</code>的评估行为的错误的。
<!-- --> <!-- -->基于这个基础上，结果会有2种结果，一种是<code>TA</code>比我优秀而我有进步的空间， 一种是确实比<code>TA</code>优秀，然后就没有然后， 除非遇到下一个<code>TA</code>。结论是：人的想法会限制住自己。那要是我不大意别人的想法别人的看法， 我还会被限制住吗?会！有一个人的想法是是谁也无法逃避了的，就是自己。
<!-- --> <!-- --> 再基于以上的基础上，就算自己不在意外人的看法不在意别人的想法的这个想法，我赢了，不再受<code>TA</code>人的想法干扰也就不再受他人限制。而这本身就是自己的想法，本身就被自己的想法限制住了。这时能取得多大的进步空间，取决于这个想法有多大，也就是梦想。果然，人最终的敌人还是自己。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2019-10-21是找答案好还是创造答案好">【2019-10-21】是找答案好还是创造答案好？<a class="hash-link" href="#2019-10-21是找答案好还是创造答案好" title="Direct link to heading">​</a></h3><p> <!-- --> 如题，你要是回答了这个问题，那么你的回答很可能是"好"或"不好"，或者其它的如：好也不好， 不好也好，可能好也可能不好...。不管这个答案是怎么样的，一旦回答了，也就被限制住了。如果非要 找一个条，创造答案本身就很难说，为一个问题创造答案本身就被问题给限制住在里面了，但只要这个答案没有被确定，又好像没有被限制住，因为在创造前它根据就不存在。所以创造答案会更好，它或许有意料不来的效果。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2019-12-10-学习从来就不是一件开心的事">【2019-12-10】 学习从来就不是一件开心的事<a class="hash-link" href="#2019-12-10-学习从来就不是一件开心的事" title="Direct link to heading">​</a></h3><p>如果学习没有高考，不能帮助找到更好的工作从而改善自己的生存环境，你还会认为学习早一件快乐的事吗？不会的！学习从来就是痛苦的，它是反天性。人的天性就是喜欢享受，享受好的东西。而这些东西不是所有的人生来就有的。而为了得来这些，人们不得不训练自己，从而达到自己的目的。而这个训练就是学习。
所以，快乐学习真较起真来，连自己都骗。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2019-12-12-提问的艺术-提问者的二意">【2019-12-12】 提问的艺术-提问者的二意<a class="hash-link" href="#2019-12-12-提问的艺术-提问者的二意" title="Direct link to heading">​</a></h3><p> <!-- -->我曾对生人直问：你爸叫什么名字？那时人家就当没听过，场面尴尬。现在想来这样的直问本身就是错误的。人家本来就跟我不熟。我问那么多想查户口啊？
那这样的提问有什么问题呢？我总结了下，一个能被人接受并很可能会得到对方回应的问题，应该表明3个“意”,分别是“来意”，“诚意”和“意思”。<br>
<!-- -->一个问题最重要的是表明来意，如果一个问题无法表明提问者的来意是善是恶，那这个问题本身就是错误的，因为它很可能不能从对方得到期待的答案，比如：
“你家里都有些什么人啊？”;那对方很可能不会回答这个问题，防人之心的原则来看，对方无法判断你的来意是好是坏，基于防人的原则会当成恶意的提问。所以不会认
真回答这个问题，如果这样问“我这里有好多的土特产，你家里都有些什么人啊？我寄些你们家里人尝尝怎样？”？这样的问题表明的来意是送礼，是善意的，应该给人
一个礼貌的回复。  <br>
<!-- --> 如果一个问题表明了来意是善意的，那只能说明这个问题很有可能得到回复，而加大对方回复的机率就是问题中要表明一个“诚意”，提问的人要知道对方是没
有义务花他的时间来给你解答问题的。如：这个bug的错误信息是。。。，我在google和官方文档都没有找解决的方法，欢迎大家随时指正批评，谢谢！ 首先这是个技术问题
，已经跟人关系的善恶观念关系不大，不过这个问题在提问的同时也表明对他人的时间</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2020-01-22-124400自我成全">【2020-01-22 12:44:00】自我成全<a class="hash-link" href="#2020-01-22-124400自我成全" title="Direct link to heading">​</a></h3><p> <!-- --> 在《霸王别姬》中，戏班子师傅对无力干着急对弟子说:"人得自个成全自个！"。那时懵懵懂懂。只是影片传过来的灰色窒息感让我难受，转头
也就忘了。<br>
<!-- -->后来进入了社会，我所坚信的”平等，自由和友善“，一次又一次一次又一次让我处于劣势，然后一个又一个一遍又一遍被人粉碎给我看，而犯贱的
我总在等你过来犯贱给你看，不知道忘了什么时候，心很难再温起来了，话也不知道该怎么说了,伴随那团窒息感总绕来绕去起起伏伏，浑浑噩噩直到记忆传来那
个恨入骨髓的声音"人得自个成全自个”时,也许可以有这么条路，我能信我所信，忠于我心也能走的下去,只要自己成全自己，自己去开路，自己去走，人必将
信他所信，人忠于已心，活下去。  </p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2020-02-03-221300人的出路在哪里">【2020-02-03 22:13:00】人的出路在哪里?<a class="hash-link" href="#2020-02-03-221300人的出路在哪里" title="Direct link to heading">​</a></h3><p> <!-- -->人来到这世上就是为了活着，而物质的总量不变！基于这个现状，人就会一直自相残杀下去，没有退路。<br>
<!-- --> 物质的总量是不变的，资源的是有限的，十个人的口粮，给十一个人至少得死一个，剩下来的继续活。这就是世界这就是天理，天理只有8个字：物竞天择，适者生存。
<!-- --> <!-- --> 我不想死，我生来就是为了在这个世界活下去。粮食不够吃，那么去种，所以农民或许能活下去;要么去剥削农民，所以地主一定能活到最后的。所以人的一生只做2件事:生产和剥削。哪怕所有人都知道所有人都当农民都能活下去，而全当地主最后都得死时，还是所有的人都想当地主，因为"人来到这世上就是为了活着"--地主更能活到最后，不好吗?。这就是矛盾的源点：为了活着就种粮食，为了更好活着，就去抢粮食！--这就是人生。<br>
<!-- --> 凡是有利于生存的物质就是价值。<br>
<!-- --> 人来到这世上就是为了活着，而物质的总量不变！基于这个现状，人就会一直自相残杀下去，没有退路。说人话就是只要人是依赖于粮食生存的，粮食再怎么种都是有限的，人人都有这个意识，有粮食活得长，没粮食就等死，除非有无限的粮食，不然窝里斗是不会结束的，阶级会一直在，这才是现实。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2020-04-12-061300我有三问我是谁从那里来要去哪里">【2020-04-12 06:13:00】我有三问:我是谁？从那里来？要去哪里？<a class="hash-link" href="#2020-04-12-061300我有三问我是谁从那里来要去哪里" title="Direct link to heading">​</a></h3><p> <!-- -->那是个夏季深夜，我爬上了屋顶，站的很高，俯视脚下的世界。星空万里，头顶着一轮满月，没云，也没风。月光撒满了脚下的世界，明亮的屋顶，平静的池塘，路边的树影...四周死一般的寂静。刚开始，我很兴奋，仿佛全世界就我一个人，我想去哪就去哪。慢慢平静下来后，孤独开始侵蚀我的内心。我仿佛从这个世界中抽离出来，看着眼前这个像是被定格在画卷的世界。我就在想：我是谁？我从哪里来？要去哪里？望着天上的星星和月亮，这个世界的一切都有它们的规律。
<!-- --> <!-- -->  太阳从这边升起那边落下；现在是深夜，将来是白天；...。那我呢？我是谁？从哪里来？要去哪里？我就像是一个外来者，与这个世界的唯一联系就是生存。今晚当我感觉我从这个世界中抽离出来时，我真的不知道下一步要去哪，这里不是我的世界。如果我们真是的是外来的，那也就能解释的通《道德经》写的那样"道可道，非常道"--我们只是认为这个世界是那样，其实不是。我们与这个世界的唯一联系就是生存，为此需要对这个陌生的世界的东西进行定义，进而使用。<br>
<!-- --> 总结起来的几个猜想就是：1，我们可能不是这个世界的，只是不知道为什么意识出现在这里？2，我们跟这个世界的唯一联系就是生存，而这个世界赋与我们另一个意识也就是我们的“兽性”，帮助我们生存下去。3，如果前面的猜想是正确的，那我们可能来自一个绝对理智的世界。</p><p>###【2020-05-28 05:33:00】 曾仕强讲座笔记  如果向长辈送（敬）礼</p><p> <!-- -->中华民族强调自食其力，不吃嗟来之食，拿别人的东西来吃而不是用自己的双手获取的就是一种羞耻，就是没面子。如果孝敬长辈，把好吃的东西给
长辈还说东西吃不完，扔了可惜，让你妈妈自己看着办吧——简直就是对长辈的污辱。把长辈看成什么了，狗才需要人这么对待，没人喜欢吃嗟来之食。换种说法
，可以对妈妈说：妈，这个很好吃，我不敢吃太多，特意留下来给你尝尝。——这叫敬礼，把好的东西敬给长辈，长辈觉得很有面子（什么世面没见过，本来就不
缺你那点东西），也收下了，这个仔没养错。总来说，是尊敬的心态。</p><p>###【2020-08-24 01:33:00】 08.论世俗的不如狗，狗和人的区别</p><p> <!-- -->人和动物的区别在于，不同于动物仅仅追求当下的生存，人还想要更长远的生存--生活富足，繁衍子孙，寿终正寝且（甚者追求长生）。所以人只
要当下活着总是为将来的生存做准备，生存就是对资源的消耗，在不确定的未来，占有更多生存资源来应对未来的不确定的生存风险消耗，而资源是有限的且投入
产出周期过长，不如掠夺见效快。于是争斗也开始了--大到阶级国家小到孩童，都在争斗。当下，你的命生死是由于你掌控，你的命才是你的。为了应对未来的
风险，敢于维护自己的生存资源不被掠夺，这就叫尊严。在世俗中，活得有尊严才叫“人”。
<!-- --> <!-- --> 在世俗中。活得有尊严的比如，资本家--不断掠夺财富的同时也敢于维护为自己的财富做斗争--主要是对手太菜了--工人。而活得像条狗如
--公民。他们的财富永远都不是他们的，通货一下来，手中的钱就是废纸，国家至今都是多数人供养少数人的群体，其“它”的都是狗--自己未来不能把握在
自己的手里，在被“人”割韭菜却不抗争，这不就是狗吗？ 那不如狗呢？没了尊严，当下的生存受到威胁，就是狗都不如--这类“人”既难以发展自己的财富
，也无法守护自己的财富（被剥削），更不敢剥削他人来获取救命的资源（被义务教育给阉割掉兽性了），不能以自己的想法来决定生死，只能等死。<br>
<!-- -->无论是人，狗，还是不如狗，这个纷争的根本于生存要以资源为消耗且资源有限为前提，如果能解决掠夺的成本大于发展的成本，则纷争要少很多。
或是使资源产量增加。不然，总要死掉一部分的狗，不如狗，来成全“人”的生存，然后纷争不止，来选出谁来成全谁。”人“，就是贱。</p><p>###【2020-10-21 07:28:00】 09.人性的天敌-蛇</p><p><img loading="lazy" src="http://qiniu.wuchuheng.com/images/sfknwfpmqy.jpeg" class="img_N7CL">
<!-- --> <!-- -->人为什么怕毒蛇？<br>
<!-- -->毒蛇，潜伏在黑暗的角落，无声地靠近它的猎物，在猎物毫无察觉的一瞬间，一闪咬过去，在猎物还未反应过来时，神经毒素已悄然注入，死亡已成
定局。黑暗意味着未知不可预测，神经毒素意味着一击致命。<br>
<!-- -->在自然界中，人依赖眼球和耳朵等待感官,接收周围环境在大部分信息，来判定自己是否安全。但有阳光，必然有影子。在寂静的黑暗角落中，人最
依赖的感官--眼晴和听觉已然失效了，此时角落蛰伏的影子悄无声息靠近，但这并不是致命的原因。而当依赖探测能力有限的感官收集到的有限信息，并以此做
出安全的判定时，结局已然注定--人，已成待宰羔羊。<br>
<!-- -->黑暗就是未知，人无法理解的区域。毒蛇--不可预测不可理解的致命一击。而丧失最后逃离机会的却是傲慢, 不全面的信息样本，本身就是个危
险信号。<br>
<!-- -->未知不可怕，毒蛇亦不可怕。忽视客观信息，而作出乐观误判，让这种危机彻底触发，出局已成必然。傲慢--人性的致命缺点，血泪史中能被刻意
策划的转换点。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2020-10-22-080600如何避免不必要的争吵">【2020-10-22 08:06:00】如何避免不必要的争吵？<a class="hash-link" href="#2020-10-22-080600如何避免不必要的争吵" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="https://qiniu.wuchuheng.com/images/intellect.jpg" class="img_N7CL">
<!-- --> <!-- --> 我为什么要跟你争吵？无非就是我说服不了你，你也说服不了我。我们都感觉自己都没说够,确又不知道要说什么。我不确定跟我吵的人能否理解
我，但有争论前，能清楚自己想说的是什么事，且知道这事在我说出去之前，是如何来到我的大脑的(信息的来源，自己想的或别人说给我听的)，信息量是多少
？那么，在跟人家说的时候，由于，知道信息是从哪里来的，也许是别人告诉我的，那就转达完也就完事了；也许是自己想出来的，那把自己想的那点东西说完，
同样完事了。至于信不信，那是他的事了。其中最重要的一点是知道要说的这些信息是从哪里来的，是否真假不重要。知道信息怎么来的，相关当于知道思路的位
置，由于要说的信息很明确，怎么来的？是什么？说的整个过程没有任何的主观情绪加入。最后对方认同或否定这些信息，是对方的事了。 </p><p>###【 2020-11-16 06:18:00】梦的开始</p><p><img loading="lazy" src="https://qiniu.wuchuheng.com/images/33bffeeeb3872939fc8854246d5e8a74c954f7c1.jpg" class="img_N7CL"></p><h4 class="anchor anchorWithStickyNavbar_wVXI" id="什么是梦">什么是梦？<a class="hash-link" href="#什么是梦" title="Direct link to heading">​</a></h4><p> <!-- -->梦就是天堂。人，为什么要活下去？我想，是为了那个梦。现实很可怕，我永远都不知道下一秒会发生什么事，这种恍若来自幕后操控之手，不停拉
着我往前走，后方足迹依旧，前方迷雾朦胧，看不透。无法停下来的我希望前边的阳光驱散这迷雾，破晓的啼鸣打碎寂静，迷雾的尽头就是山水--这就是梦，面
对看不透的未来，此时此刻我选择相信梦，然后活下去，直到梦破碎就是终止,这终止就是永远。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2021-02-01-191400-我的行为准则">【2021-02-01 19:14:00】 我的行为准则<a class="hash-link" href="#2021-02-01-191400-我的行为准则" title="Direct link to heading">​</a></h3><ol><li>只能自救，绝不能寄望他人帮助  </li><li>能不说，就不说  </li><li>能动手，绝不动口  </li><li>他人不尊重我，就走开，绝不给他人践踏的机会,且先记下来  </li><li>假如争斗不可避免，绝不手软  </li><li>绝不轻易寻求他人帮助;受人恩惠，先记下来  </li><li>不要抱怨，抱怨是解决不了实际问题的  </li><li>绝不忘记初衷且践行初衷不受以上限制</li></ol><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2021-02-12-012920不要去想">【2021-02-12 01:29:20】不要去想<a class="hash-link" href="#2021-02-12-012920不要去想" title="Direct link to heading">​</a></h3><p> <!-- -->不要去想，就是忘记了，一忘记了，也就无敌了。<br>
<!-- -->生活会遇到曾经的人和事，莫名的情绪一上来，难以自控。怎么办？深吸一口气，不要忘记自己的初衷，这事都是意外，或仇恨或恩馈，都是次要的
。曾经的伤口无法抚平，那就不要去想，不要发呆，找点事做，做自己计划中的事。初衷就是未来的梦，这梦一碎，人也就没了。那我能怎么办？<br>
<img loading="lazy" src="https://qiniu.wuchuheng.com/images/1_vZBIe9iovFKC010lnC_jUw.jpeg" class="img_N7CL">
<!-- --> <!-- --> 深吸一口气，不要去想，不要去想，不要去想。不要在他人身上浪费心力，不要向他人证明什么，不要向他人解释什么。知己，现实不可能存在的
。只能盯住远方，不要回头。遵守自己的行为准则，守住自己的理智。让未来，遵从自己的意志演化下去，变成那个梦——是，有时候我控制不了情绪。<br>
<!-- --> 我活地很痛苦，但我爱我生活，我依然愿意再来一次，只因为，总有点不确定的东西，引人遐想，它在我梦里，那个梦太美了太纯粹了。但碎了，
重来，梦也回来了。<br>
<!-- --> 已经回不去了。无法梦以岁月，只能岁月以梦。理智的梦，终成冰冷的现实。只是心，没了。</p><h3 class="anchor anchorWithStickyNavbar_wVXI" id="2021-11-22-0550">【2021-11-22 05:50】<a class="hash-link" href="#2021-11-22-0550" title="Direct link to heading">​</a></h3><p> <!-- --> 我也许是疯子也许是天才，也许只是一厢情愿。但无所谓，原来特立独行的我今天找到了解释。令我很开心，这个解释我很满意，让我能义无反顾保持下去。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[职生涯第5次php面试记录]]></title>
            <link>https://wuchuheng.com/blog/职生涯第5次php面试记录</link>
            <guid>职生涯第5次php面试记录</guid>
            <pubDate>Sat, 03 Aug 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[刚面试回来。就结果来说，10道题目只答对了2道确实很尴尬的结果。面试官很清楚自己要问什么 ，也很有耐心，反观我这边在]]></description>
            <content:encoded><![CDATA[<p>刚面试回来。就结果来说，10道题目只答对了2道确实很尴尬的结果。面试官很清楚自己要问什么 ，也很有耐心，反观我这边在
自己介绍这块说了一堆让人插不下话的废话确实失礼。可是要怎么说才好呢？唉！ 整个过程下来30分钟，人家有给提示是自己没把
握到点,给人一种“我想拉你一把，可你不给力”的样子。虽然他问的<code>if</code>和<code>for</code>的流程控制时，一时间我就怀疑他在耍我,这
不废话吗。小学生都能回答的事， 居然问了，结果小学生真的比我强，<code>for</code> 也有不用花括号的写法，而我回答不上。尴尬啊,
黑历史诞生了！！！   好,现在来复盘:</p><h4 class="anchor anchorWithStickyNavbar_wVXI" id="1-流程控制符不用花括号的写法">1, 流程控制符不用花括号的写法。<a class="hash-link" href="#1-流程控制符不用花括号的写法" title="Direct link to heading">​</a></h4><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>刚才开始也闹不明白为什么非要不用花括号的写法，结合面试官说的“模板引擎”这个关键词回忆下，在使用框架的时候模板
的时候，<code>html</code>混合<code>php</code>的时候就是用这种替代写法，感觉更像是一种<code>html</code>的默认写法规范，</p></div></div><div class="language-php codeBlockContainer_BUZR theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_n4dD"><pre tabindex="0" class="prism-code language-php codeBlock_i7dA thin-scrollbar"><code class="codeBlockLines_vRyG"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//  if 流程控制</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... do sth</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... do sth</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... do sth</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">endif</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  for 流程控制</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$i</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$i</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">endfor</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// foreach 流程控制</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">foreach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">endforeach</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// while 流程控制</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$i</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$i</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">endwhile</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 其它</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">swithc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'foot'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// do sth ;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">endswitch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FzQ2"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MUvd" aria-hidden="true"><svg class="copyButtonIcon_kr8h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_EbNa" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_wVXI" id="2关于数组比较运算符--和-">2,关于数组比较运算符 === 和 ==<a class="hash-link" href="#2关于数组比较运算符--和-" title="Direct link to heading">​</a></h4><div class="language-php codeBlockContainer_BUZR theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_n4dD"><pre tabindex="0" class="prism-code language-php codeBlock_i7dA thin-scrollbar"><code class="codeBlockLines_vRyG"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">var_dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 顺序不一致 false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">var_dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 值和排序一致 true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">var_dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string single-quoted-string" style="color:#e3116c">'b'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'a'</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 值一致不要求顺序一致 true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FzQ2"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MUvd" aria-hidden="true"><svg class="copyButtonIcon_kr8h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_EbNa" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_wVXI" id="3-代码复用trait">3, 代码复用<code>trait</code><a class="hash-link" href="#3-代码复用trait" title="Direct link to heading">​</a></h4><p><code>trait</code> 代码复用这个之前用过，不过面试时没及时想起来，很尴尬。现在再折腾下吧。
既然要折腾那就找个方向吧，官方文档说了，<code>trait </code>可以解除<code>php</code>类的单继承限制,那么这个解除单继承
能不能理解为其它在类里<code>use</code>复用一个代码块其实就是继承一个类呢，而<code>trait</code>其实可以看作一个类呢？
就先这样假设吧？ 那既然<code>trait</code>是个类，那么就应该拥有类的特有的魔术方法。</p><div class="language-php codeBlockContainer_BUZR theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_n4dD"><pre tabindex="0" class="prism-code language-php codeBlock_i7dA thin-scrollbar"><code class="codeBlockLines_vRyG"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  在trait 和类同时使用 构造方法和析构方法</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">Trait</span><span class="token plain"> </span><span class="token class-name-definition class-name">TraitA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$foo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">//  traitA赋值 $foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">__construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token variable" style="color:#36acaa">$this</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'to set value by TraitA'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name-definition class-name">Test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">use</span><span class="token plain">  </span><span class="token package">TraitA</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// 类如果上面的TraitA不执行构造方法，那本就赋值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">__construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token variable" style="color:#36acaa">$this</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$this</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">??</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'to set value TestClass'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//  打印 to set value TestClass</span><br></span></code></pre><div class="buttonGroup_FzQ2"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MUvd" aria-hidden="true"><svg class="copyButtonIcon_kr8h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_EbNa" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>结果很透明 <code>Test</code>类覆盖了 <code>TraitA</code>的方法，从而修改的<code>foo</code>参数，这不类继承和覆盖一样的吗?
所以当下估且可以把<code>trait</code>看作是一个类，毕竟还有其的魔术方法还没测试。
好，下一步来看看，复用2个 <code>trait</code>，并写起冲突的方法。看看怎么样。</p><div class="language-php codeBlockContainer_BUZR theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_n4dD"><pre tabindex="0" class="prism-code language-php codeBlock_i7dA thin-scrollbar"><code class="codeBlockLines_vRyG"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//  在trait 和类同时使用 构造方法和析构方法</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">Trait</span><span class="token plain"> </span><span class="token class-name-definition class-name">TraitA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$foo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  traitA赋值 $foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">__construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$this</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'to set value by TraitA'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">Trait</span><span class="token plain"> </span><span class="token class-name-definition class-name">TraitB</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$foo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  traitA赋值 $foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">__construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$this</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'to set value by TraitA'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name-definition class-name">Test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">use</span><span class="token plain">  </span><span class="token package">TraitA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TraitB</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token property" style="color:#36acaa">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// PHP Fatal error:  Trait method __construct has not been applied, because there are collisions with other trait methods on Test in /home/http/tmp/tmp.php on line 25</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FzQ2"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MUvd" aria-hidden="true"><svg class="copyButtonIcon_kr8h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_EbNa" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>结果还是报错了，果然这点会起冲突跟类的单例继承不一样。也可能是多类该有的现象。后面再观察下吧。</p><h4 class="anchor anchorWithStickyNavbar_wVXI" id="4-方法内的static关键字">4, 方法内的static关键字<a class="hash-link" href="#4-方法内的static关键字" title="Direct link to heading">​</a></h4><p>这个知识点以前学习过，不过忘记了。所以这个不意外，真回答不了。
<code>static</code> 和<code>self</code>都是对当前类的引用，不过<code>self</code>比较死板，<code>self</code>写在哪个类就代表哪个类，
如果哪个类刚好有可以调用的方法和属性就调用，没有就报错，哪怕你在当前类把没有属性补充上也没用。
而<code>static</code>跟<code>self</code>一样，不过灵活很多，用<code>static</code>调用东西，它会一由本类往上游的继承的方向找，直到
找到要调用的方法然后就调用。找不到就报错误。</p><div class="language-php codeBlockContainer_BUZR theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_n4dD"><pre tabindex="0" class="prism-code language-php codeBlock_i7dA thin-scrollbar"><code class="codeBlockLines_vRyG"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name-definition class-name">A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">testStatic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword static-context" style="color:#00009f">static</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">printClassName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">testSelf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">   </span><span class="token keyword static-context" style="color:#00009f">self</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">printClassName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">printClassName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'A'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name-definition class-name">B</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">printClassName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"> </span><span class="token string single-quoted-string" style="color:#e3116c">'B'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">.</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PHP_EOL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name static-context">B</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">testStatic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// print B</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name static-context">B</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">testSelf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// print A</span><br></span></code></pre><div class="buttonGroup_FzQ2"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MUvd" aria-hidden="true"><svg class="copyButtonIcon_kr8h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_EbNa" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_wVXI" id="5-抽象类">5 抽象类<a class="hash-link" href="#5-抽象类" title="Direct link to heading">​</a></h4><h4 class="anchor anchorWithStickyNavbar_wVXI" id="6-接口">6 接口<a class="hash-link" href="#6-接口" title="Direct link to heading">​</a></h4><h4 class="anchor anchorWithStickyNavbar_wVXI" id="7-把对象当参数传到方法有什么不同">7 把对象当参数传到方法有什么不同<a class="hash-link" href="#7-把对象当参数传到方法有什么不同" title="Direct link to heading">​</a></h4><h4 class="anchor anchorWithStickyNavbar_wVXI" id="8-php-内置引擎模板和rquire">8 php 内置引擎模板和rquire<a class="hash-link" href="#8-php-内置引擎模板和rquire" title="Direct link to heading">​</a></h4><h4 class="anchor anchorWithStickyNavbar_wVXI" id="9-php-匿名的使用">9 php 匿名的使用<a class="hash-link" href="#9-php-匿名的使用" title="Direct link to heading">​</a></h4>]]></content:encoded>
        </item>
    </channel>
</rss>